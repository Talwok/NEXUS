name: NEXUS Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract-version
        shell: pwsh
        run: |
          $version = $env:GITHUB_REF -replace "refs/tags/v", ""
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "VERSION=$version" >> $env:GITHUB_ENV
          Write-Host "Extracted version: $version"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Устанавливаем версию во всех проектах
      - name: Set version in projects
        shell: pwsh
        run: |
          $version = $env:VERSION
          $versionProps = @"
  <Project>
  <PropertyGroup>
  <Version>$version</Version>
  <FileVersion>$version</FileVersion>
  <AssemblyVersion>$version.0</AssemblyVersion>
  </PropertyGroup>
  </Project>
  "@
        $versionProps | Out-File -FilePath "Version.props"

# Сборка Fractal
- name: Build NEXUS.Fractal
  shell: pwsh
  run: |
    dotnet publish NEXUS.Fractal -c Release -r win-x64 --self-contained true `
      -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true `
      -p:Version=$env:VERSION -p:FileVersion=$env:VERSION -p:AssemblyVersion=$env:VERSION.0 `
      -o ./artifacts/Fractal

# Сборка Growth
- name: Build NEXUS.Growth
  shell: pwsh
  run: |
    dotnet publish NEXUS.Growth -c Release -r win-x64 --self-contained true `
      -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true `
      -p:Version=$env:VERSION -p:FileVersion=$env:VERSION -p:AssemblyVersion=$env:VERSION.0 `
      -o ./artifacts/Growth

# Сборка Simulation
- name: Build NEXUS.Growth.Simulation
  shell: pwsh
  run: |
    dotnet publish NEXUS.Growth.Simulation -c Release -r win-x64 --self-contained true `
      -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true `
      -p:Version=$env:VERSION -p:FileVersion=$env:VERSION -p:AssemblyVersion=$env:VERSION.0 `
      -o ./artifacts/Simulation

# Создание архивов
- name: Create ZIP archives
  shell: pwsh
  run: |
    $version = $env:VERSION
    Compress-Archive -Path ./artifacts/Fractal/* -DestinationPath "./NEXUS.Fractal-$version.zip"
    Compress-Archive -Path ./artifacts/Growth/* -DestinationPath "./NEXUS.Growth-$version.zip"
    Compress-Archive -Path ./artifacts/Simulation/* -DestinationPath "./NEXUS.Simulation-$version.zip"

# Создание релиза
- name: Create GitHub Release
  id: create-release
  uses: softprops/action-gh-release@v1
  env:
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  with:
    tag_name: ${{ github.ref }}
    name: NEXUS ${{ env.VERSION }}
    body: |
      NEXUS Desktop Applications Release ${{ env.VERSION }}
      
      Includes:
      - NEXUS.Fractal (Avalonia)
      - NEXUS.Growth (Avalonia)
      - NEXUS.Growth.Simulation (Console)
    files: |
      NEXUS.Fractal-${{ env.VERSION }}.zip
      NEXUS.Growth-${{ env.VERSION }}.zip
      NEXUS.Simulation-${{ env.VERSION }}.zip